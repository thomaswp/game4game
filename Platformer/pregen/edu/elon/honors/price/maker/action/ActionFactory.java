package edu.elon.honors.price.maker.action;							// ActionFactoryWriter.writeHeader()
																	// ActionFactoryWriter.writeHeader()
public class ActionFactory {										// ActionFactoryWriter.writeHeader()
	public final static int[] ACTION_IDS = new int[] {				// ActionFactoryWriter.writeHeader()
		0,															// ActionFactoryWriter.writeHeader()
		1,															// ActionFactoryWriter.writeHeader()
		2,															// ActionFactoryWriter.writeHeader()
		3,															// ActionFactoryWriter.writeHeader()
		4,															// ActionFactoryWriter.writeHeader()
		5,															// ActionFactoryWriter.writeHeader()
		7,															// ActionFactoryWriter.writeHeader()
		8,															// ActionFactoryWriter.writeHeader()
		9,															// ActionFactoryWriter.writeHeader()
		10,															// ActionFactoryWriter.writeHeader()
		11,															// ActionFactoryWriter.writeHeader()
		12,															// ActionFactoryWriter.writeHeader()
		13,															// ActionFactoryWriter.writeHeader()
		14,															// ActionFactoryWriter.writeHeader()
		15,															// ActionFactoryWriter.writeHeader()
		16,															// ActionFactoryWriter.writeHeader()
		17,															// ActionFactoryWriter.writeHeader()
		18,															// ActionFactoryWriter.writeHeader()
		19,															// ActionFactoryWriter.writeHeader()
		20,															// ActionFactoryWriter.writeHeader()
		21,															// ActionFactoryWriter.writeHeader()
		22,															// ActionFactoryWriter.writeHeader()
		23,															// ActionFactoryWriter.writeHeader()
		24,															// ActionFactoryWriter.writeHeader()
		25,															// ActionFactoryWriter.writeHeader()
	};																// ActionFactoryWriter.writeHeader()
	public final static String[] ACTION_NAMES = new String[] {		// ActionFactoryWriter.writeHeader()
		"Set Switch",												// ActionFactoryWriter.writeHeader()
		"Set Variable",												// ActionFactoryWriter.writeHeader()
		"Create Actor",												// ActionFactoryWriter.writeHeader()
		"Debug Box",												// ActionFactoryWriter.writeHeader()
		"Move Actor",												// ActionFactoryWriter.writeHeader()
		"Trigger Actor Behavior",									// ActionFactoryWriter.writeHeader()
		"",															// ActionFactoryWriter.writeHeader()
		"If...",													// ActionFactoryWriter.writeHeader()
		"Create Object",											// ActionFactoryWriter.writeHeader()
		"Move Object",												// ActionFactoryWriter.writeHeader()
		"Set Velocity",												// ActionFactoryWriter.writeHeader()
		"Debug Message",											// ActionFactoryWriter.writeHeader()
		"Point Operation",											// ActionFactoryWriter.writeHeader()
		"Change Gravity",											// ActionFactoryWriter.writeHeader()
		"UI Action",												// ActionFactoryWriter.writeHeader()
		"Destroy Object",											// ActionFactoryWriter.writeHeader()
		"Draw to Screen",											// ActionFactoryWriter.writeHeader()
		"Loop...",													// ActionFactoryWriter.writeHeader()
		"Trigger Actor Animation",									// ActionFactoryWriter.writeHeader()
		"Animate",													// ActionFactoryWriter.writeHeader()
		"Wait",														// ActionFactoryWriter.writeHeader()
		"Stop",														// ActionFactoryWriter.writeHeader()
		"Else",														// ActionFactoryWriter.writeHeader()
		"Trigger Event",											// ActionFactoryWriter.writeHeader()
		"Change Color",												// ActionFactoryWriter.writeHeader()
		"Set Behavior Parameter",									// ActionFactoryWriter.writeHeader()
	};																// ActionFactoryWriter.writeHeader()
	public final static String[] ACTION_CATEGORIES = new String[] {	// ActionFactoryWriter.writeHeader()
		"Variables",												// ActionFactoryWriter.writeHeader()
		"Variables",												// ActionFactoryWriter.writeHeader()
		"Actor",													// ActionFactoryWriter.writeHeader()
		"Debug",													// ActionFactoryWriter.writeHeader()
		"Actor",													// ActionFactoryWriter.writeHeader()
		"Actor",													// ActionFactoryWriter.writeHeader()
		"Misc",														// ActionFactoryWriter.writeHeader()
		"Control",													// ActionFactoryWriter.writeHeader()
		"Object",													// ActionFactoryWriter.writeHeader()
		"Object",													// ActionFactoryWriter.writeHeader()
		"Physics",													// ActionFactoryWriter.writeHeader()
		"Debug",													// ActionFactoryWriter.writeHeader()
		"Variables",												// ActionFactoryWriter.writeHeader()
		"Physics",													// ActionFactoryWriter.writeHeader()
		"UI",														// ActionFactoryWriter.writeHeader()
		"Object",													// ActionFactoryWriter.writeHeader()
		"UI",														// ActionFactoryWriter.writeHeader()
		"Control",													// ActionFactoryWriter.writeHeader()
		"Animate",													// ActionFactoryWriter.writeHeader()
		"Animate",													// ActionFactoryWriter.writeHeader()
		"Control",													// ActionFactoryWriter.writeHeader()
		"Control",													// ActionFactoryWriter.writeHeader()
		"Hidden",													// ActionFactoryWriter.writeHeader()
		"Control",													// ActionFactoryWriter.writeHeader()
		"Actor|Object",												// ActionFactoryWriter.writeHeader()
		"Actor|Object",												// ActionFactoryWriter.writeHeader()
	};																// ActionFactoryWriter.writeHeader()
	public static ScriptableInstance getInstance(int id) {			// ActionFactoryWriter.writeHeader()
		if (id == ActionSetSwitch.ID) return new ActionSetSwitch();	// ActionFactoryWriter.writeHeader()
		if (id == ActionSetVariable.ID) return new ActionSetVariable();// ActionFactoryWriter.writeHeader()
		if (id == ActionCreateActor.ID) return new ActionCreateActor();// ActionFactoryWriter.writeHeader()
		if (id == ActionDebugBox.ID) return new ActionDebugBox();	// ActionFactoryWriter.writeHeader()
		if (id == ActionMoveActor.ID) return new ActionMoveActor();	// ActionFactoryWriter.writeHeader()
		if (id == ActionTriggerActorBehavior.ID) return new ActionTriggerActorBehavior();// ActionFactoryWriter.writeHeader()
		if (id == ActionIf.ID) return new ActionIf();				// ActionFactoryWriter.writeHeader()
		if (id == ActionCreateObject.ID) return new ActionCreateObject();// ActionFactoryWriter.writeHeader()
		if (id == ActionMoveObject.ID) return new ActionMoveObject();// ActionFactoryWriter.writeHeader()
		if (id == ActionSetVelocity.ID) return new ActionSetVelocity();// ActionFactoryWriter.writeHeader()
		if (id == ActionDebugMessage.ID) return new ActionDebugMessage();// ActionFactoryWriter.writeHeader()
		if (id == ActionPointOperation.ID) return new ActionPointOperation();// ActionFactoryWriter.writeHeader()
		if (id == ActionChangeGravity.ID) return new ActionChangeGravity();// ActionFactoryWriter.writeHeader()
		if (id == ActionUIAction.ID) return new ActionUIAction();	// ActionFactoryWriter.writeHeader()
		if (id == ActionDestroyObject.ID) return new ActionDestroyObject();// ActionFactoryWriter.writeHeader()
		if (id == ActionDrawToScreen.ID) return new ActionDrawToScreen();// ActionFactoryWriter.writeHeader()
		if (id == ActionLoop.ID) return new ActionLoop();			// ActionFactoryWriter.writeHeader()
		if (id == ActionTriggerActorAnimation.ID) return new ActionTriggerActorAnimation();// ActionFactoryWriter.writeHeader()
		if (id == ActionAnimate.ID) return new ActionAnimate();		// ActionFactoryWriter.writeHeader()
		if (id == ActionWait.ID) return new ActionWait();			// ActionFactoryWriter.writeHeader()
		if (id == ActionStop.ID) return new ActionStop();			// ActionFactoryWriter.writeHeader()
		if (id == ActionElse.ID) return new ActionElse();			// ActionFactoryWriter.writeHeader()
		if (id == ActionTriggerEvent.ID) return new ActionTriggerEvent();// ActionFactoryWriter.writeHeader()
		if (id == ActionChangeColor.ID) return new ActionChangeColor();// ActionFactoryWriter.writeHeader()
		if (id == ActionSetBehaviorParameter.ID) return new ActionSetBehaviorParameter();// ActionFactoryWriter.writeHeader()
		return null;												// ActionFactoryWriter.writeHeader()
	}																// ActionFactoryWriter.writeHeader()
	public static boolean isParent(int id) {						// ActionFactoryWriter.writeHeader()
		if (id == ActionIf.ID) return true;							// ActionFactoryWriter.writeHeader()
		if (id == ActionLoop.ID) return true;						// ActionFactoryWriter.writeHeader()
		if (id == ActionElse.ID) return true;						// ActionFactoryWriter.writeHeader()
		return false;												// ActionFactoryWriter.writeHeader()
	}																// ActionFactoryWriter.writeHeader()
	public static java.util.LinkedList<Class<?>> getInterpreters() {// ActionFactoryWriter.writeHeader()
		java.util.LinkedList<Class<?>> classes = new java.util.LinkedList<Class<?>>();// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterSetSwitch"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterSetVariable"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterCreateActor"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterDebugBox"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterMoveActor"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterTriggerActorBehavior"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterIf"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterCreateObject"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterMoveObject"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterSetVelocity"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterDebugMessage"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterPointOperation"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterChangeGravity"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterUIAction"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterDestroyObject"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterDrawToScreen"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterLoop"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterTriggerActorAnimation"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterAnimate"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterWait"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterStop"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterElse"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterTriggerEvent"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterChangeColor"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		try {														// ActionFactoryWriter.writeHeader()
			classes.add(Class.forName("edu.elon.honors.price.maker.action.InterpreterSetBehaviorParameter"));// ActionFactoryWriter.writeHeader()
		} catch (Exception e) { }									// ActionFactoryWriter.writeHeader()
		return classes;												// ActionFactoryWriter.writeHeader()
	}																// ActionFactoryWriter.writeHeader()
}																	// ActionFactoryWriter.writeHeader()
